Query {
  _mongooseOptions: {},
  _transforms: [],
  _hooks: Kareem { _pres: Map {}, _posts: Map {} },
_executionCount: 0,
mongooseCollection:
NativeCollection {
collection: Collection { s: [Object] },
Promise: [Function: Promise],
opts:
{ bufferCommands: true,
capped: false,
Promise: [Function: Promise],
'$wasForceClosed': undefined },
name: 'campgrounds',
collectionName: 'campgrounds',
conn:
NativeConnection {
base: [Mongoose],
collections: [Object],
models: [Object],
config: [Object],
replica: false,
options: null,
otherDbs: [],
relatedDbs: {},
states: [Object],
_readyState: 1,
_closeCalled: false,
_hasOpened: true,
plugins: [],
_listening: false,
_connectionOptions: [Object],
client: [MongoClient],
'$initialConnection': [Promise],
name: 'admin',
host: 'vladisharcluster-shard-00-02-eit8n.mongodb.net',
port: 27017,
user: 'VladiPc',
pass: 'Al0nga55fuck1ngt1m3ag0',
db: [Db] },
queue: [],
buffer: false,
emitter:
EventEmitter {
_events: [Object: null prototype] {},
_eventsCount: 0,
_maxListeners: undefined } },
model: Model { Campground },
schema:
Schema {
obj:
{ name: [Function: String],
image: [Function: String],
description: [Function: String],
comments: [Array],
author: [Object] },
paths:
{ name: [SchemaString],
image: [SchemaString],
description: [SchemaString],
comments: [SchemaArray],
'author.id': [ObjectId],
'author.username': [SchemaString],
_id: [ObjectId],
__v: [SchemaNumber] },
aliases: {},
subpaths: { 'comments.$': [ObjectId] },
virtuals: { id: [VirtualType] },
singleNestedPaths: {},
nested: { author: true },
inherits: {},
callQueue: [],
_indexes: [],
methods: {},
methodOptions: {},
statics: {},
tree:
{ name: [Function: String],
image: [Function: String],
description: [Function: String],
comments: [Array],
author: [Object],
_id: [Object],
__v: [Function: Number],
id: [VirtualType] },
query: {},
childSchemas: [],
plugins: [ [Object], [Object], [Object], [Object], [Object] ],
'$id': 2,
s: { hooks: [Kareem] },
_userProvidedOptions: {},
options:
{ typeKey: 'type',
id: true,
noVirtualId: false,
_id: true,
noId: false,
validateBeforeSave: true,
read: null,
shardKey: null,
autoIndex: null,
minimize: true,
discriminatorKey: '__t',
versionKey: '__v',
capped: false,
bufferCommands: true,
strict: true,
pluralization: true },
'$globalPluginsApplied': true,
_requiredpaths: [],
_indexedpaths: [] },
op: 'find',
options: {},
_conditions:
{ author: { id: 5d7b3e55f88501290470eab1, username: 'a' },
comments: [],
_id: 5d7b52da5df06c77d8cee338,
name: 'Banana Mountain',
image:
'https://images.unsplash.com/photo-1545719851-78ad0bb3233d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2134&q=80',
description: 'A Statue of a Banana on a mountain.',
__v: 0 },
_fields: undefined,
_update: undefined,
_path: undefined,
_distinct: undefined,
_collection:
NodeCollection {
collection:
NativeCollection {
collection: [Collection],
Promise: [Function: Promise],
opts: [Object],
name: 'campgrounds',
collectionName: 'campgrounds',
conn: [NativeConnection],
queue: [],
buffer: false,
emitter: [EventEmitter] },
collectionName: 'campgrounds' },
_traceFunction: undefined,
'$useProjection': true }